stages:
  - build
  - sync

# ---------------------------
# JOB 1 : BUILD + PUSH vers Harbor
# ---------------------------
build_and_push:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    TAG: "$CI_COMMIT_TAG"
    IMAGE_NAME: "$HARBOR_URL/backup-portainer-github/backup-portainer-github"
  script:
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" --password-stdin $HARBOR_URL
    - docker build -t $IMAGE_NAME:$TAG .
    - docker push $IMAGE_NAME:$TAG
    - docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:latest
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

# ---------------------------
# JOB 2 : SYNC complet vers GitHub (manuel)
# - Push code (tag + master)
# - Push images Docker vers GHCR + Docker Hub
# - Cr√©er une release GitHub avec changelog
# ---------------------------
push_latest_tag_and_master_to_github:
  stage: sync
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache git curl jq
  script:
    # üîñ Tag courant
    - git fetch --unshallow || true
    - git fetch --tags
    - LAST_TAG=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | head -n 1)
    - echo "üü¢ Dernier tag local est le $LAST_TAG"

    # üí¨ Liste des 5 derniers tags pour info
    - echo "üì¶ Tags disponibles :"
    - git tag --sort=-creatordate | head -n 5

    # üîÅ Push du tag + master sur GitHub
    - git config --global user.email "ci@martinbranda.com"
    - git config --global user.name "GitLab CI"
    - git remote add github https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/lepikouze/backup-portainer-github-test.git

    - |
      if git rev-parse "$LAST_TAG" >/dev/null 2>&1; then
        echo "üîç V√©rification si le tag $LAST_TAG existe d√©j√† sur GitHub..."
        if git ls-remote --tags github | grep -q "refs/tags/$LAST_TAG$"; then
          echo "‚è≠Ô∏è Tag $LAST_TAG existe d√©j√† sur GitHub. Aucun push effectu√©."
        else
          echo "üöÄ Pushing tag $LAST_TAG vers GitHub..."
          git push github "$LAST_TAG"
        fi

        echo "üöÄ Pushing master vers GitHub..."
        git push github HEAD:refs/heads/master
      else
        echo "‚ùå Tag $LAST_TAG introuvable localement."
        exit 1
      fi

    # üê≥ Docker login vers registries
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" --password-stdin $HARBOR_URL
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin

    # üì• Pull image depuis Harbor
    - docker pull $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG

    # üîÅ Docker Hub
    #- docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG lepikouze/backup-portainer-github:$LAST_TAG
    #- docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG lepikouze/backup-portainer-github:latest
    #- docker push lepikouze/backup-portainer-github:$LAST_TAG
    #- docker push lepikouze/backup-portainer-github:latest

    # üîÅ GitHub Container Registry
    - docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG ghcr.io/lepikouze/backup-portainer-github-test:$LAST_TAG
    - docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG ghcr.io/lepikouze/backup-portainer-github-test:latest
    - docker push ghcr.io/lepikouze/backup-portainer-github-test:$LAST_TAG
    - docker push ghcr.io/lepikouze/backup-portainer-github-test:latest

    # üì¶ G√©n√©ration changelog depuis derni√®re release GitHub
    - |
      LAST_GITHUB_TAG=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/lepikouze/backup-portainer-github-test/releases | jq -r 'map(.tag_name) | sort_by(.) | reverse | .[0]')
      echo "üîç Dernier tag publi√© sur GitHub : $LAST_GITHUB_TAG"

    - echo "üîç Dernier tag publi√© sur GitHub est le $LAST_GITHUB_TAG"

    - |
      if [ -n "$LAST_GITHUB_TAG" ] && git rev-parse "$LAST_GITHUB_TAG" >/dev/null 2>&1; then
        CHANGELOG=$(git log "$LAST_GITHUB_TAG..$LAST_TAG" --pretty=format:"- %s (%an)" --no-merges)
      else
        CHANGELOG=$(git log "$LAST_TAG" --pretty=format:"- %s (%an)" --no-merges)
      fi

    - echo "üìù Changelog g√©n√©r√© :"
    - echo "$CHANGELOG"

    # üöÄ Cr√©ation de la release GitHub
    - |
      curl -s -X POST https://api.github.com/repos/lepikouze/backup-portainer-github-test/releases \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        -d "$(jq -n \
          --arg tag "$LAST_TAG" \
          --arg name "$LAST_TAG" \
          --arg body "## üßæ Release Notes\n\n$CHANGELOG" \
          '{ tag_name: $tag, name: $name, body: $body, draft: false, prerelease: false }')"
  when: manual
  allow_failure: false
