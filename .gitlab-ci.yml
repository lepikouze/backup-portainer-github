stages:
  - build
  - sync

# ---------------------------
# JOB 1 : BUILD + PUSH vers Harbor
# ---------------------------
build_and_push:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    TAG: "$CI_COMMIT_TAG"
    IMAGE_NAME: "$HARBOR_URL/backup-portainer-github/backup-portainer-github"
  script:
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" --password-stdin $HARBOR_URL
    - docker build -t $IMAGE_NAME:$TAG .
    - docker push $IMAGE_NAME:$TAG
    - docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:latest
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

# ---------------------------
# JOB 2 : SYNC complet vers GitHub (manuel)
# - Push code (tag + master)
# - Push images Docker vers GHCR + Docker Hub
# - Cr√©er une release GitHub avec changelog
# ---------------------------
push_latest_tag_and_master_to_github:
  stage: sync
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache git curl jq
  script:
    - git fetch --unshallow || true
    - git fetch --tags

    # üè∑Ô∏è R√©cup√©ration du dernier tag local
    - LAST_TAG=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' refs/tags | head -n 1)
    - echo "üü¢ Dernier tag local est le $LAST_TAG"

    # üìñ Lecture du bloc correspondant dans CHANGELOG.md
    - |
      echo "üìù Extraction du changelog pour $LAST_TAG"

      if [ ! -f CHANGELOG.md ]; then
        echo "‚ùå Fichier CHANGELOG.md introuvable"
        exit 1
      fi

      RELEASE_BODY=$(awk "/^## $LAST_TAG/{flag=1;next}/^## /{flag=0}flag" CHANGELOG.md)

      if [ -z "$RELEASE_BODY" ]; then
        echo "‚ùå Aucun changelog trouv√© pour $LAST_TAG"
        exit 1
      fi

      echo "$RELEASE_BODY" > changelog.md
      echo "‚úÖ Contenu extrait :"
      cat changelog.md


    # üîÅ Git remote + push
    - git config --global user.email "ci@martinbranda.com"
    - git config --global user.name "GitLab CI"
    - git remote add github https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_USERNAME/backup-portainer-github-test.git

    - echo "üöÄ Pushing tag $LAST_TAG vers GitHub..."
    - git push github "$LAST_TAG" || echo "‚ö†Ô∏è Le tag existe d√©j√† sur GitHub."

    - echo "üöÄ Pushing master vers GitHub..."
    - git push github HEAD:refs/heads/master

    # üê≥ Connexion aux registries
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" --password-stdin $HARBOR_URL
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin

    # üì• Pull de l'image depuis Harbor
    - docker pull $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG

    # üè∑Ô∏è Tag local pour GHCR et DockerHub
    - docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG ghcr.io/$GITHUB_USERNAME/backup-portainer-github-test:$LAST_TAG
    - docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG ghcr.io/$GITHUB_USERNAME/backup-portainer-github-test:latest
    #- docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG $DOCKERHUB_USERNAME/backup-portainer-github:$LAST_TAG
    #- docker tag $HARBOR_URL/backup-portainer-github/backup-portainer-github:$LAST_TAG $DOCKERHUB_USERNAME/backup-portainer-github:latest

    # üöÄ Push vers GHCR & DockerHub
    - docker push ghcr.io/$GITHUB_USERNAME/backup-portainer-github-test:$LAST_TAG
    - docker push ghcr.io/$GITHUB_USERNAME/backup-portainer-github-test:latest
   # - docker push $DOCKERHUB_USERNAME/backup-portainer-github:$LAST_TAG
   # - docker push $DOCKERHUB_USERNAME/backup-portainer-github:latest

    # üìù Cr√©ation de la release GitHub
    - |
      CHANGELOG=$(cat changelog.md)

      curl -s -X POST https://api.github.com/repos/$GITHUB_USERNAME/backup-portainer-github-test/releases \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Content-Type: application/json" \
        -d "$(jq -n \
              --arg tag "$LAST_TAG" \
              --arg name "$LAST_TAG" \
              --arg body "$CHANGELOG" \
              '{ tag_name: $tag, name: $name, body: $body, draft: false, prerelease: false }')"

  when: manual
  allow_failure: false